[tool.poetry]
name = "crystal-copilot"
version = "0.1.0"
description = "Crystal Reports modernization tool with drag-and-drop upload, natural language queries, and simple edits"
authors = ["Crystal Copilot Team"]
readme = "README.md"
packages = [
    {include = "backend"},
]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = "^0.104.1"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
python-multipart = "^0.0.6"
streamlit = "^1.28.0"
openai = "^1.3.0"
pydantic = "^2.5.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
python-dotenv = "^1.0.0"
azure-storage-blob = "^12.19.0"
xmltodict = "^0.13.0"
pytest = "^7.4.3"
httpx = "^0.25.2"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
black = "^23.11.0"
isort = "^5.12.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
pre-commit = "^3.6.0"
httpx = "^0.25.2"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']

[tool.isort]
profile = "black"
multi_line_output = 3
line-length = 88
known_first_party = ["backend", "frontend"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
testpaths = ["backend/tests", "frontend/tests"]
python_files = "test_*.py"
addopts = "-v --tb=short --strict-markers"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
]